<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Michell Stuttgart</title><link href="http://mstuttgart.com.br/" rel="alternate"></link><link href="http://mstuttgart.com.br/feeds/tutorial.atom.xml" rel="self"></link><id>http://mstuttgart.com.br/</id><updated>2016-03-18T11:59:51-03:00</updated><entry><title>Backup e Restore de um banco de dados PostgreSQL</title><link href="http://mstuttgart.com.br/backup-e-restore-de-um-banco-de-dados-postgresql.html" rel="alternate"></link><published>2016-03-18T11:59:51-03:00</published><author><name>Michell Stuttgart</name></author><id>tag:mstuttgart.com.br,2016-03-18:backup-e-restore-de-um-banco-de-dados-postgresql.html</id><summary type="html">&lt;p&gt;Quando trabalhamos com alguma aplicações que faz uso de um banco de dados, muitas vezes precisamos realizar um &lt;code&gt;backup&lt;/code&gt; do nosso banco (antes de alguma atualização importante na aplicação) ou executar o &lt;code&gt;restore&lt;/code&gt; desse banco caso seja necessário.&lt;/p&gt;
&lt;p&gt;Eu trabalhei por um tempo desenvolvendo funcionalidades para o ERP Odoo. Esse ERP faz uso do PostgreSQL, e frequentemente eu precisava realizar &lt;code&gt;backup&lt;/code&gt; e &lt;code&gt;restore&lt;/code&gt; dos bancos que criava para atualizar as máquinas dos clientes. Então, segue abaixo o procedimento que eu utilizava.&lt;/p&gt;
&lt;h3&gt;Backup&lt;/h3&gt;
&lt;p&gt;Para realizar o &lt;code&gt;backup&lt;/code&gt;, primeiro precisamos logar como usuário &lt;code&gt;postgres&lt;/code&gt;. No terminal entre com:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo su - postgres
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Uma vez logado, voce pode reparar que o nome de usuário no terminal mudou. Caso seja necessário, é possível visualizar a lista de bancos existentes na sua máquina através do comando abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;psql -l
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Agora, vamos realizar o backup do banco com o seguinte comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pg_dump -Fc nome_banco &amp;gt; nome_banco_backup.dump
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Assim será criado um arquivo com a extensão &lt;code&gt;.dump&lt;/code&gt; no diretório &lt;code&gt;/var/lib/postgressql&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Também podemos incrementar o comando de modo a deixarmos registrado o dia, hora e minuto em que o &lt;code&gt;backup&lt;/code&gt; foi realizado, algo muito útil caso você precise realizar a restauração do banco.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pg_dump -Fc nome_banco &amp;gt; nome_banco-backup-`date +%Y-%m-%d-%H-%M`.dump
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Restore&lt;/h3&gt;
&lt;p&gt;A restauração do banco é tão simples quanto o &lt;code&gt;backup&lt;/code&gt;.
Primeiramente, vamos criar uma entrada para o banco que será restaurado.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;createdb banco_do_cliente_x
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Apenas uma observação, antes de criar uma entrada para o novo banco, é uma boa prática verificar se já não existe outro banco com o mesmo nome. Isso pode ser feito com o comando &lt;code&gt;psql -l&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Caso o seu objetivo seja mesmo substituir o banco &lt;code&gt;banco_do_cliente_x&lt;/code&gt;, você pode usar o comando abaixo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;dropdb banco_do_cliente_x
createdb banco_do_cliente_x
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finalmente realizamos o &lt;code&gt;restore&lt;/code&gt; do banco com o comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pg_restore -d banco_do_cliente_x banco_backup.dump
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Vale lembrar que para executar o comando acima, o arquivo .dump deve estar no diretório &lt;code&gt;/var/lib/postgressql&lt;/code&gt; (mova o arquivo para esse diretório caso ele ainda não esteja).&lt;/p&gt;
&lt;p&gt;É isso pessoal. Esse dica já me salvou muito vezes e espero que seja útil para vocês também.&lt;/p&gt;
&lt;p&gt;Até o próximo post!&lt;/p&gt;</summary><category term="linux"></category><category term="tutorial"></category><category term="banco de dados"></category></entry><entry><title>Como criar diretórios e arquivos usando expressões regulares</title><link href="http://mstuttgart.com.br/como-criar-diretorios-e-arquivos-usando-expressoes-regulares.html" rel="alternate"></link><published>2014-08-30T05:47:00-07:00</published><author><name>Michell Stuttgart</name></author><id>tag:mstuttgart.com.br,2014-08-30:como-criar-diretorios-e-arquivos-usando-expressoes-regulares.html</id><summary type="html">&lt;p&gt;Olá pessoal, tudo bem? Todo programador linux sabe como o uso do terminal pode ser uma ajuda insubstituível na realização de algumas tarefas. Neste post eu irei compartilhar algumas coisa que descobri usando o terminal.&lt;/p&gt;
&lt;h3&gt;Exemplo 1&lt;/h3&gt;
&lt;p&gt;Para começar, quando desejamos criar um diretório pelo terminal, usamos o seguinte comando:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir nome_do_diretorio
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Algo muito prático. Mas e se precisarmos criar 10 diretórios com o seguinte formato de nome: &lt;code&gt;minha_pasta_1&lt;/code&gt;, &lt;code&gt;minha_pasta_2&lt;/code&gt;, &lt;code&gt;minha_pasta_3&lt;/code&gt;, ..., &lt;code&gt;minha_pasta_10&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Certamente a realização dessa tarefa pelo ambiente gráfico é algo muito cansativo e lento. Então vamos fazer uso do terminal do linux para resolver essa situação.
Você talvez não saiba (eu pelo menos não sabia.. hehe), que o comando &lt;code&gt;mkdir&lt;/code&gt; aceita expressões regulares. Então, vamos usar-las para resolver nosso problema.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir minha_pasta_&lt;span class="o"&gt;{&lt;/span&gt;1-10&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Dentro da &lt;code&gt;{}&lt;/code&gt;, nós inserimos a expressão regular desejada. A expressão &lt;code&gt;{1..10}&lt;/code&gt; irá criar &lt;code&gt;10&lt;/code&gt; diretórios seguindo o padrão de nomes desejado.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/mstuttgart/snapshot_11.png" /&gt;&lt;/p&gt;
&lt;p&gt;Abaixo temos outros exemplos de uso das expressões regulares.
Trata-se de um comando útil para quando desejamos criar um grande numero de arquivos cujo nomes seguem uma determinada regra.&lt;/p&gt;
&lt;p&gt;Para deletarmos os diretorios que acabamos de criar também podemos usar a mesma expressão regular.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;rm -rf minha_pasta_&lt;span class="o"&gt;{&lt;/span&gt;1-10&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Exemplo 2&lt;/h3&gt;
&lt;p&gt;Vamos criar 100 arquivos com o seguinte formato de nome: &lt;code&gt;file_”numero_do_arquivo”.txt&lt;/code&gt;. Basta no terminal, usarmos o comando &lt;code&gt;touch&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;touch file_&lt;span class="o"&gt;{&lt;/span&gt;1-100&lt;span class="o"&gt;}&lt;/span&gt;.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Apos executarmos o comando, &lt;code&gt;100&lt;/code&gt; arquivos do tipo &lt;code&gt;.txt&lt;/code&gt; serão criados seguindo a regra de nome que desejamos.&lt;/p&gt;
&lt;h3&gt;Exemplo 3&lt;/h3&gt;
&lt;p&gt;Vamos criar um conjunto de arquivos cujos nomes seguem o formato: &lt;code&gt;file_a.txt&lt;/code&gt;, &lt;code&gt;file_b.txt&lt;/code&gt;, … &lt;code&gt;file_z.txt&lt;/code&gt;. Basta executar o seguinte comando no terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;touch file_&lt;span class="o"&gt;{&lt;/span&gt;a-z&lt;span class="o"&gt;}&lt;/span&gt;.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Resultado:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/mstuttgart/snapshot_12.png" /&gt;&lt;/p&gt;
&lt;h3&gt;Exemplo 4&lt;/h3&gt;
&lt;p&gt;Vamos criar um conjunto de arquivo cujo nomes seguem o seguinte formato: &lt;code&gt;file_a1.txt&lt;/code&gt;, &lt;code&gt;file_a2.txt&lt;/code&gt;, &lt;code&gt;file_a3.txt&lt;/code&gt;, …, &lt;code&gt;file_a9.txt&lt;/code&gt;, &lt;code&gt;file_b1.txt&lt;/code&gt;, &lt;code&gt;file_b2.txt&lt;/code&gt;, …, &lt;code&gt;file_b9.txt&lt;/code&gt;. Basta executar o seguinte comando no terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;touch file_&lt;span class="o"&gt;{&lt;/span&gt;a-b&lt;span class="o"&gt;}{&lt;/span&gt;1-9&lt;span class="o"&gt;}&lt;/span&gt;.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A seguir temos os arquivos que foram criados pela execução da expressão regular.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/mstuttgart/snapshot_13.png" /&gt;&lt;/p&gt;
&lt;p&gt;Como podemos perceber, dentro da &lt;code&gt;{}&lt;/code&gt; podemos adicionar qualquer expressão regular.
Mais um exemplo com a criação de diretórios.&lt;/p&gt;
&lt;h3&gt;Exemplo 5&lt;/h3&gt;
&lt;p&gt;Vamos criar um conjunto de 10 diretórios com o nome no formato: &lt;code&gt;folder_10&lt;/code&gt;, &lt;code&gt;folder_11&lt;/code&gt;, &lt;code&gt;folder_12&lt;/code&gt;, &lt;code&gt;folder_19&lt;/code&gt;, &lt;code&gt;folder_20&lt;/code&gt;, &lt;code&gt;folder_21&lt;/code&gt;, ..., &lt;code&gt;folder_29&lt;/code&gt;, ..., &lt;code&gt;folder_90&lt;/code&gt;, ..., &lt;code&gt;folder_99&lt;/code&gt;. Basta executar o seguinte comando no terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mkdir folder_&lt;span class="o"&gt;{&lt;/span&gt;1-9&lt;span class="o"&gt;}{&lt;/span&gt;0-9&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;É isso pessoal. Espero que a dica seja útil para vocês. Até o próximo post.&lt;/p&gt;</summary><category term="linux"></category><category term="tutorial"></category><category term="expressão regular"></category></entry><entry><title>Ambiente de desenvolvimento: Arduino + Sublime Text</title><link href="http://mstuttgart.com.br/ambiente-de-desenvolvimento-arduino-sublime-text.html" rel="alternate"></link><published>2014-06-03T17:18:00-07:00</published><author><name>Michell Stuttgart</name></author><id>tag:mstuttgart.com.br,2014-06-03:ambiente-de-desenvolvimento-arduino-sublime-text.html</id><summary type="html">&lt;p&gt;Há algum tempo, tipo o prazer de participar de um minicurso abordando o básico sobre o desenvolvimento usando a plataforma Arduino. Após a instalação das bibliotecas necessárias, também foi necessário instalar a Arduino IDE, um ambiente de desenvolvimento próprio para programação nessa plataforma.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/mstuttgart/snapshot_3.png" /&gt;&lt;/p&gt;
&lt;p&gt;Apesar da IDE oferecer suporte a todos os recursos do Arduino, o seu editor de texto era simples demais, sem funções que são comuns a muitos editores, como auto-completar, fechamento automático de &lt;em&gt;{}&lt;/em&gt; e entre outras coisas básicas. Uma vez que eu estou acostumado a editores de texto mais avançados, acabei me sentindo bastante desconfortável e parti em busca de outra alternativa. Foi então que descobri a combinação &lt;code&gt;SublimeText + Stino&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;O Sublime Text um editor de texto e IDE bem conhecido por programadores. Possui muitos recursos bacanas como auto-completar, suporte a múltiplas linguagens de programação e uma infinidade de plugins, temas e possui versões para diversos sistemas operacionais. O Sublime Text pode ser baixado aqui. Para Linux, temos um pacote com a extensão .deb. Para instalá-lo basta dar dois cliques no arquivo, inserir a senha de administrador e seguir com a instalação normalmente.&lt;/p&gt;
&lt;p&gt;Com o Sublime Text instalado, vamos dar prosseguimento a instalação do plugin Stino, para suporte ao Arduino.&lt;/p&gt;
&lt;p&gt;Inicialmente, vamos instalar o plugin que permite a instalação de packages no Sublime Text. Caso já o tenho instalado, pode ignorar estas etapas.&lt;/p&gt;
&lt;p&gt;Execute o Sublime Text e vá em:  &lt;code&gt;View -&amp;gt; Show Console&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Na área inferior da janela do Sublime Text, irá aparecer um campo de texto onde você deve colar o código encontrado aqui, de acordo com a versão do Sublime Text. Após copiar e colar o texto no campo de texto do Sublime Text, tecle Enter. Após a instalação, reinicie o Sublime Text.&lt;/p&gt;
&lt;p&gt;Depois de reiniciar o Sublime Text, clique no menu: &lt;code&gt;Preferences -&amp;gt; Package Control&lt;/code&gt;.
No campo de texto Package Control, digite: &lt;code&gt;Install Package&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Aguarde alguns segundo e irá aparecer outro campo de texto para você entrar com o nome do package.
Digite Arduino e irá aparecer um package chamado &lt;code&gt;Arduino Like IDE&lt;/code&gt;. Selecione-o e aguarde alguns segundos para a instalação completar (você pode verificar o progresso da instalação na área inferior da janela do Sublime Text). Após completada a instalação, reinicie o Sublime Text.&lt;/p&gt;
&lt;p&gt;Depois de reiniciar o Sublime Text, vá em Preferences e selecione a opção &lt;code&gt;Show Arduino Menu&lt;/code&gt; (se já não estiver selecionado). Fazendo isso, um novo menu chamado "Arduino" surgirá ao lado do menu Help.&lt;/p&gt;
&lt;p&gt;Para o próximo passo, clique em: &lt;code&gt;Arduino -&amp;gt; Preferences -&amp;gt; Select Arduino Application Folder&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Insira a localização da instalação das bibliotecas do Arduino no seu sistema. A minha está em &lt;code&gt;/usr/share/arduino&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Uma que você tenha escolhido o diretório correto, uma mensagem do tipo&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Arduino x.x.x is found at /usr/share/arduino&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;irá aparecer.&lt;/p&gt;
&lt;p&gt;Agora você pode desenvolver seus programas usando o Sublime Text e utilizar as opções do menu Arduino, como compilar, fazer upload do seu código, selecionar o modelo do Arduino, a porta usada para comunicação e todos os outros recursos que a Arduino IDE possuía e muito mais. Você verá também que a velocidade de compilação e upload usando o Sublime Text é muito maior do que a realizada pela Arduino IDE.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="images/mstuttgart/snapshot_4.png" /&gt;&lt;/p&gt;
&lt;p&gt;É isso pessoal. Agora você já pode se divertir com Arduino desenvolvendo seus códigos em um editor de texto profissional.&lt;/p&gt;
&lt;p&gt;Esse tutorial foi baseado nas informações contidas &lt;a href="https://github.com/Robot-Will/Stino"&gt;aqui&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Obrigado por ler e até o próximo post!&lt;/p&gt;</summary><category term="Arduino"></category><category term="Tutorial"></category><category term="C++"></category><category term="Sublime Text"></category><category term="Software"></category></entry><entry><title>Fontes de texto serrilhadas no KDE</title><link href="http://mstuttgart.com.br/fontes-de-texto-serrilhadas-no-kde.html" rel="alternate"></link><published>2014-06-03T10:15:00-07:00</published><author><name>Michell Stuttgart</name></author><id>tag:mstuttgart.com.br,2014-06-03:fontes-de-texto-serrilhadas-no-kde.html</id><summary type="html">&lt;p&gt;Eu tenho o KDE como meu ambiente gráfico favorito. Além de ser visualmente atraente, altamente configurável e muito fácil de usar. Mas como nem tudo é perfeito, nós as vezes encontramos alguns bugs chatos pra resolver. O bug em questão acontece após a instalação de alguns tipos de temas, deixando as fontes de todo o KDE mais finas e serrilhadas. Apesar disso ocorrer muito raramente, quando
acontece, as fontes não voltam ao normal mesmo que as configurações de alti-aliased das delas sejam alteradas. Eu já presenciei esse erro no KDE 4.9, 4.12 e 4.13 (o que uso atualmente). Depois de quebrar a cabeça com o bug eu finalmente consegui corrigi-lo e compartilho com vocês os passos a serem seguidos.
Inicialmente, vamos até o painel de configurações de fontes do KDE.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;System Settings -&amp;gt; Application appearance -&amp;gt; Fonts&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Onde está escrito &lt;code&gt;"Use anti-aliasing"&lt;/code&gt; selecione a opção &lt;code&gt;"Enable"&lt;/code&gt;, como ilustra a figura a seguir.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Fonts" src="images/mstuttgart/snapshot_1.png" /&gt;&lt;/p&gt;
&lt;p&gt;Sem seguida, clique em &lt;code&gt;Configure..&lt;/code&gt;. Uma janela com algumas opções vai abrir. Deixe as suas configurações iguais as mostradas na figura abaixo e depois clique em &lt;code&gt;OK&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Configure" src="images/mstuttgart/snapshot_2.png" /&gt;&lt;/p&gt;
&lt;p&gt;Terminada as configurações acima, clique no botão em &lt;code&gt;Apply&lt;/code&gt; e feche a janela de configurações. Você pode perceber que mesmo configurando as fontes, elas ainda permanecem serrilhadas. Então, o próximo passo é ajustá-las manualmente.&lt;/p&gt;
&lt;p&gt;Vá para a sua pasta &lt;code&gt;home/usuario&lt;/code&gt; e procure o arquivo &lt;code&gt;.font.conf&lt;/code&gt;. Os arquivos cujo nome se inicia com &lt;code&gt;"."&lt;/code&gt; são arquivos ocultos do sistema. Caso o arquivo &lt;code&gt;.font.conf&lt;/code&gt; não apareça pra você, aperte o atalho &lt;code&gt;Alt + .&lt;/code&gt; . Feito isso, os arquivos devem ficar visíveis.&lt;/p&gt;
&lt;p&gt;Procure o arquivo &lt;code&gt;.font.conf&lt;/code&gt; e o abra em um editor de texto. Feito isso, substitua todos os &lt;code&gt;false&lt;/code&gt; que encontrar no arquivo por &lt;code&gt;true&lt;/code&gt; e reinicie o sistema. Quando você logar novamente, verá que as fontes voltaram ao normal e não estão mais serrilhadas. Essa configuração deve ser feita apenas quando ocorrer esse bug com a fontes do KDE.&lt;/p&gt;
&lt;p&gt;É isso pessoal. Até o próximo post.&lt;/p&gt;</summary><category term="KDE"></category><category term="Tutorial"></category><category term="Linux Mint"></category></entry></feed>